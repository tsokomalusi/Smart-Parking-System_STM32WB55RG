/* mbed Microcontroller Library
 * Copyright (c) 2019 ARM Limited
 * SPDX-License-Identifier: Apache-2.0
 */

/*

Assignment instructions:
------------------------
For this assignment, you should:
1.	Read voltage from potentiometer 2 (connected to an analog input pin) every second
2.	Output the voltage reading to the serial terminal
3.	Implement feedback based on the following voltage ranges:
•	0-1V: Display 'Warning: Low voltage!' on terminal and turn on LED1 only
•	1-2V: Display 'Voltage OK' on terminal and turn on LED1 and LED2
•	2-3V: Display 'Caution: High voltage' on terminal and turn on LED1, LED2, and LED3
•	Above 3V: Display 'OVERVOLTAGE' on terminal and make all three LEDs blink
4.	Your solution should continuously monitor the voltage and update the display and LEDs accordingly.

*/

#include "mbed.h"
#include "string.h"


//Define pin assignments
#define LED1 PB_13
#define LED2 PB_14
#define LED3 PB_15

// Timing definition(s)
#define READ_TIME 1s
#define BLINKING_RATE 500ms

// Initialize the serial communication
UnbufferedSerial pc(USBTX, USBRX, 115200);
AnalogIn pot2(PC_1);

// Voltage range 0 - 3.3 V
const float MAX_VOLTAGE = 3.3f;

// Initialize the digital pins
    DigitalOut led1(LED1);
    DigitalOut led2(LED2);
    DigitalOut led3(LED3);


int main()  {

   while(true)  {

   // Turn off all LEDs initially
     led1 = 0;
     led2 = 0;
     led3 = 0;
   
   // values between 0.0 and 1.0
   float relativeVoltage = pot2.read();

   float voltage = relativeVoltage * MAX_VOLTAGE;
 
  if(voltage >= 0.0f && voltage <= 1.0f) {
      
     led1 = 1;
     printf("Warning:Low Voltage! (%.2f  V)\n", voltage);

  }
  else if(voltage >= 1.0f && voltage <= 2.0f) {
     
     led1 = 1;
     led2 = 1;
     printf("Voltage OK  (%.2f  V)\n", voltage);
   }
   else if(voltage >= 2.0f && voltage <= 3.0f) {

     led1 = 1;
     led2 = 1;
     led3 = 1;
     printf("Caution:High Voltage (%.2f  V)\n", voltage);

   }
   else {
         
         // Overvoltage condition
    
         printf("OVERVOLTAGE!: (%.2f V)\n", voltage);

         for(int i = 0; i < 5; i++) {
             // blink 3 times as fast for visibility
             led1 = !led1;
             led2 = !led2;
             led3 = !led3;

             ThisThread::sleep_for(BLINKING_RATE);

            

         }

  }

       // Wait 1s before the next reading
       ThisThread::sleep_for(READ_TIME);
 }



}